eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka/
management:
  tracing:
    sampling:
      probability: 1.0
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      enabled: true
      show-details: always
    beans:
      enabled: false
  endpoints:
    web:
      exposure:
        include: "*"

spring:
  application:
    name: notification-service
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    consumer:
      group-id: notificationId
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping:
                event:com.microservice.notificationservice.event.OrderPlacedEvent
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

resilience4j:
  circuitbreaker:
    instances:
      inventory:
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 5
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        eventConsumerBufferSize: 10
        registerHealthIndicator: true
        automatic-transition-from-open-to-half-open-enabled: true
  retry:
    instances:
      inventory:
        maxAttempts: 3
        waitDuration: 1s
  timelimiter:
    instances:
      inventory:
        timeoutDuration: 5s
        cancelRunningFuture: true


server:
  port: 0

